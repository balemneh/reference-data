/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package gov.dhs.cbp.reference.events.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CarrierEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3764671286783921562L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CarrierEvent\",\"namespace\":\"gov.dhs.cbp.reference.events.avro\",\"fields\":[{\"name\":\"eventId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique identifier for this event\"},{\"name\":\"eventType\",\"type\":{\"type\":\"enum\",\"name\":\"EventType\",\"symbols\":[\"CREATED\",\"UPDATED\",\"DELETED\",\"DEPRECATED\"]},\"doc\":\"Type of event\"},{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"When the event occurred\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"carrierId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"UUID of the carrier\"},{\"name\":\"carrierCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Carrier code\"},{\"name\":\"carrierName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Carrier name\"},{\"name\":\"codeSystem\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Code system (e.g., IATA, ICAO, SCAC)\"},{\"name\":\"iataCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"IATA airline code\",\"default\":null},{\"name\":\"icaoCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"ICAO airline code\",\"default\":null},{\"name\":\"scacCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"SCAC carrier code\",\"default\":null},{\"name\":\"carrierType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type of carrier (airline, vessel, truck, rail)\",\"default\":null},{\"name\":\"operatingMode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Operating mode (air, sea, land)\",\"default\":null},{\"name\":\"countryCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Country of registration\",\"default\":null},{\"name\":\"validFrom\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Start of validity period (ISO date)\"},{\"name\":\"validTo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"End of validity period (ISO date)\",\"default\":null},{\"name\":\"version\",\"type\":\"long\",\"doc\":\"Version number\"},{\"name\":\"changeRequestId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Associated change request\",\"default\":null},{\"name\":\"recordedBy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"User who recorded this change\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CarrierEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CarrierEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CarrierEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CarrierEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CarrierEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CarrierEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CarrierEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CarrierEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CarrierEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Unique identifier for this event */
  private java.lang.String eventId;
  /** Type of event */
  private gov.dhs.cbp.reference.events.avro.EventType eventType;
  /** When the event occurred */
  private long timestamp;
  /** UUID of the carrier */
  private java.lang.String carrierId;
  /** Carrier code */
  private java.lang.String carrierCode;
  /** Carrier name */
  private java.lang.String carrierName;
  /** Code system (e.g., IATA, ICAO, SCAC) */
  private java.lang.String codeSystem;
  /** IATA airline code */
  private java.lang.String iataCode;
  /** ICAO airline code */
  private java.lang.String icaoCode;
  /** SCAC carrier code */
  private java.lang.String scacCode;
  /** Type of carrier (airline, vessel, truck, rail) */
  private java.lang.String carrierType;
  /** Operating mode (air, sea, land) */
  private java.lang.String operatingMode;
  /** Country of registration */
  private java.lang.String countryCode;
  /** Start of validity period (ISO date) */
  private java.lang.String validFrom;
  /** End of validity period (ISO date) */
  private java.lang.String validTo;
  /** Version number */
  private long version;
  /** Associated change request */
  private java.lang.String changeRequestId;
  /** User who recorded this change */
  private java.lang.String recordedBy;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CarrierEvent() {}

  /**
   * All-args constructor.
   * @param eventId Unique identifier for this event
   * @param eventType Type of event
   * @param timestamp When the event occurred
   * @param carrierId UUID of the carrier
   * @param carrierCode Carrier code
   * @param carrierName Carrier name
   * @param codeSystem Code system (e.g., IATA, ICAO, SCAC)
   * @param iataCode IATA airline code
   * @param icaoCode ICAO airline code
   * @param scacCode SCAC carrier code
   * @param carrierType Type of carrier (airline, vessel, truck, rail)
   * @param operatingMode Operating mode (air, sea, land)
   * @param countryCode Country of registration
   * @param validFrom Start of validity period (ISO date)
   * @param validTo End of validity period (ISO date)
   * @param version Version number
   * @param changeRequestId Associated change request
   * @param recordedBy User who recorded this change
   */
  public CarrierEvent(java.lang.String eventId, gov.dhs.cbp.reference.events.avro.EventType eventType, java.lang.Long timestamp, java.lang.String carrierId, java.lang.String carrierCode, java.lang.String carrierName, java.lang.String codeSystem, java.lang.String iataCode, java.lang.String icaoCode, java.lang.String scacCode, java.lang.String carrierType, java.lang.String operatingMode, java.lang.String countryCode, java.lang.String validFrom, java.lang.String validTo, java.lang.Long version, java.lang.String changeRequestId, java.lang.String recordedBy) {
    this.eventId = eventId;
    this.eventType = eventType;
    this.timestamp = timestamp;
    this.carrierId = carrierId;
    this.carrierCode = carrierCode;
    this.carrierName = carrierName;
    this.codeSystem = codeSystem;
    this.iataCode = iataCode;
    this.icaoCode = icaoCode;
    this.scacCode = scacCode;
    this.carrierType = carrierType;
    this.operatingMode = operatingMode;
    this.countryCode = countryCode;
    this.validFrom = validFrom;
    this.validTo = validTo;
    this.version = version;
    this.changeRequestId = changeRequestId;
    this.recordedBy = recordedBy;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventId;
    case 1: return eventType;
    case 2: return timestamp;
    case 3: return carrierId;
    case 4: return carrierCode;
    case 5: return carrierName;
    case 6: return codeSystem;
    case 7: return iataCode;
    case 8: return icaoCode;
    case 9: return scacCode;
    case 10: return carrierType;
    case 11: return operatingMode;
    case 12: return countryCode;
    case 13: return validFrom;
    case 14: return validTo;
    case 15: return version;
    case 16: return changeRequestId;
    case 17: return recordedBy;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventId = value$ != null ? value$.toString() : null; break;
    case 1: eventType = (gov.dhs.cbp.reference.events.avro.EventType)value$; break;
    case 2: timestamp = (java.lang.Long)value$; break;
    case 3: carrierId = value$ != null ? value$.toString() : null; break;
    case 4: carrierCode = value$ != null ? value$.toString() : null; break;
    case 5: carrierName = value$ != null ? value$.toString() : null; break;
    case 6: codeSystem = value$ != null ? value$.toString() : null; break;
    case 7: iataCode = value$ != null ? value$.toString() : null; break;
    case 8: icaoCode = value$ != null ? value$.toString() : null; break;
    case 9: scacCode = value$ != null ? value$.toString() : null; break;
    case 10: carrierType = value$ != null ? value$.toString() : null; break;
    case 11: operatingMode = value$ != null ? value$.toString() : null; break;
    case 12: countryCode = value$ != null ? value$.toString() : null; break;
    case 13: validFrom = value$ != null ? value$.toString() : null; break;
    case 14: validTo = value$ != null ? value$.toString() : null; break;
    case 15: version = (java.lang.Long)value$; break;
    case 16: changeRequestId = value$ != null ? value$.toString() : null; break;
    case 17: recordedBy = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'eventId' field.
   * @return Unique identifier for this event
   */
  public java.lang.String getEventId() {
    return eventId;
  }


  /**
   * Sets the value of the 'eventId' field.
   * Unique identifier for this event
   * @param value the value to set.
   */
  public void setEventId(java.lang.String value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return Type of event
   */
  public gov.dhs.cbp.reference.events.avro.EventType getEventType() {
    return eventType;
  }


  /**
   * Sets the value of the 'eventType' field.
   * Type of event
   * @param value the value to set.
   */
  public void setEventType(gov.dhs.cbp.reference.events.avro.EventType value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return When the event occurred
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * When the event occurred
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'carrierId' field.
   * @return UUID of the carrier
   */
  public java.lang.String getCarrierId() {
    return carrierId;
  }


  /**
   * Sets the value of the 'carrierId' field.
   * UUID of the carrier
   * @param value the value to set.
   */
  public void setCarrierId(java.lang.String value) {
    this.carrierId = value;
  }

  /**
   * Gets the value of the 'carrierCode' field.
   * @return Carrier code
   */
  public java.lang.String getCarrierCode() {
    return carrierCode;
  }


  /**
   * Sets the value of the 'carrierCode' field.
   * Carrier code
   * @param value the value to set.
   */
  public void setCarrierCode(java.lang.String value) {
    this.carrierCode = value;
  }

  /**
   * Gets the value of the 'carrierName' field.
   * @return Carrier name
   */
  public java.lang.String getCarrierName() {
    return carrierName;
  }


  /**
   * Sets the value of the 'carrierName' field.
   * Carrier name
   * @param value the value to set.
   */
  public void setCarrierName(java.lang.String value) {
    this.carrierName = value;
  }

  /**
   * Gets the value of the 'codeSystem' field.
   * @return Code system (e.g., IATA, ICAO, SCAC)
   */
  public java.lang.String getCodeSystem() {
    return codeSystem;
  }


  /**
   * Sets the value of the 'codeSystem' field.
   * Code system (e.g., IATA, ICAO, SCAC)
   * @param value the value to set.
   */
  public void setCodeSystem(java.lang.String value) {
    this.codeSystem = value;
  }

  /**
   * Gets the value of the 'iataCode' field.
   * @return IATA airline code
   */
  public java.lang.String getIataCode() {
    return iataCode;
  }


  /**
   * Sets the value of the 'iataCode' field.
   * IATA airline code
   * @param value the value to set.
   */
  public void setIataCode(java.lang.String value) {
    this.iataCode = value;
  }

  /**
   * Gets the value of the 'icaoCode' field.
   * @return ICAO airline code
   */
  public java.lang.String getIcaoCode() {
    return icaoCode;
  }


  /**
   * Sets the value of the 'icaoCode' field.
   * ICAO airline code
   * @param value the value to set.
   */
  public void setIcaoCode(java.lang.String value) {
    this.icaoCode = value;
  }

  /**
   * Gets the value of the 'scacCode' field.
   * @return SCAC carrier code
   */
  public java.lang.String getScacCode() {
    return scacCode;
  }


  /**
   * Sets the value of the 'scacCode' field.
   * SCAC carrier code
   * @param value the value to set.
   */
  public void setScacCode(java.lang.String value) {
    this.scacCode = value;
  }

  /**
   * Gets the value of the 'carrierType' field.
   * @return Type of carrier (airline, vessel, truck, rail)
   */
  public java.lang.String getCarrierType() {
    return carrierType;
  }


  /**
   * Sets the value of the 'carrierType' field.
   * Type of carrier (airline, vessel, truck, rail)
   * @param value the value to set.
   */
  public void setCarrierType(java.lang.String value) {
    this.carrierType = value;
  }

  /**
   * Gets the value of the 'operatingMode' field.
   * @return Operating mode (air, sea, land)
   */
  public java.lang.String getOperatingMode() {
    return operatingMode;
  }


  /**
   * Sets the value of the 'operatingMode' field.
   * Operating mode (air, sea, land)
   * @param value the value to set.
   */
  public void setOperatingMode(java.lang.String value) {
    this.operatingMode = value;
  }

  /**
   * Gets the value of the 'countryCode' field.
   * @return Country of registration
   */
  public java.lang.String getCountryCode() {
    return countryCode;
  }


  /**
   * Sets the value of the 'countryCode' field.
   * Country of registration
   * @param value the value to set.
   */
  public void setCountryCode(java.lang.String value) {
    this.countryCode = value;
  }

  /**
   * Gets the value of the 'validFrom' field.
   * @return Start of validity period (ISO date)
   */
  public java.lang.String getValidFrom() {
    return validFrom;
  }


  /**
   * Sets the value of the 'validFrom' field.
   * Start of validity period (ISO date)
   * @param value the value to set.
   */
  public void setValidFrom(java.lang.String value) {
    this.validFrom = value;
  }

  /**
   * Gets the value of the 'validTo' field.
   * @return End of validity period (ISO date)
   */
  public java.lang.String getValidTo() {
    return validTo;
  }


  /**
   * Sets the value of the 'validTo' field.
   * End of validity period (ISO date)
   * @param value the value to set.
   */
  public void setValidTo(java.lang.String value) {
    this.validTo = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return Version number
   */
  public long getVersion() {
    return version;
  }


  /**
   * Sets the value of the 'version' field.
   * Version number
   * @param value the value to set.
   */
  public void setVersion(long value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'changeRequestId' field.
   * @return Associated change request
   */
  public java.lang.String getChangeRequestId() {
    return changeRequestId;
  }


  /**
   * Sets the value of the 'changeRequestId' field.
   * Associated change request
   * @param value the value to set.
   */
  public void setChangeRequestId(java.lang.String value) {
    this.changeRequestId = value;
  }

  /**
   * Gets the value of the 'recordedBy' field.
   * @return User who recorded this change
   */
  public java.lang.String getRecordedBy() {
    return recordedBy;
  }


  /**
   * Sets the value of the 'recordedBy' field.
   * User who recorded this change
   * @param value the value to set.
   */
  public void setRecordedBy(java.lang.String value) {
    this.recordedBy = value;
  }

  /**
   * Creates a new CarrierEvent RecordBuilder.
   * @return A new CarrierEvent RecordBuilder
   */
  public static gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder newBuilder() {
    return new gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder();
  }

  /**
   * Creates a new CarrierEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CarrierEvent RecordBuilder
   */
  public static gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder newBuilder(gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder other) {
    if (other == null) {
      return new gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder();
    } else {
      return new gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder(other);
    }
  }

  /**
   * Creates a new CarrierEvent RecordBuilder by copying an existing CarrierEvent instance.
   * @param other The existing instance to copy.
   * @return A new CarrierEvent RecordBuilder
   */
  public static gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder newBuilder(gov.dhs.cbp.reference.events.avro.CarrierEvent other) {
    if (other == null) {
      return new gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder();
    } else {
      return new gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for CarrierEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CarrierEvent>
    implements org.apache.avro.data.RecordBuilder<CarrierEvent> {

    /** Unique identifier for this event */
    private java.lang.String eventId;
    /** Type of event */
    private gov.dhs.cbp.reference.events.avro.EventType eventType;
    /** When the event occurred */
    private long timestamp;
    /** UUID of the carrier */
    private java.lang.String carrierId;
    /** Carrier code */
    private java.lang.String carrierCode;
    /** Carrier name */
    private java.lang.String carrierName;
    /** Code system (e.g., IATA, ICAO, SCAC) */
    private java.lang.String codeSystem;
    /** IATA airline code */
    private java.lang.String iataCode;
    /** ICAO airline code */
    private java.lang.String icaoCode;
    /** SCAC carrier code */
    private java.lang.String scacCode;
    /** Type of carrier (airline, vessel, truck, rail) */
    private java.lang.String carrierType;
    /** Operating mode (air, sea, land) */
    private java.lang.String operatingMode;
    /** Country of registration */
    private java.lang.String countryCode;
    /** Start of validity period (ISO date) */
    private java.lang.String validFrom;
    /** End of validity period (ISO date) */
    private java.lang.String validTo;
    /** Version number */
    private long version;
    /** Associated change request */
    private java.lang.String changeRequestId;
    /** User who recorded this change */
    private java.lang.String recordedBy;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.carrierId)) {
        this.carrierId = data().deepCopy(fields()[3].schema(), other.carrierId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.carrierCode)) {
        this.carrierCode = data().deepCopy(fields()[4].schema(), other.carrierCode);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.carrierName)) {
        this.carrierName = data().deepCopy(fields()[5].schema(), other.carrierName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.codeSystem)) {
        this.codeSystem = data().deepCopy(fields()[6].schema(), other.codeSystem);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.iataCode)) {
        this.iataCode = data().deepCopy(fields()[7].schema(), other.iataCode);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.icaoCode)) {
        this.icaoCode = data().deepCopy(fields()[8].schema(), other.icaoCode);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.scacCode)) {
        this.scacCode = data().deepCopy(fields()[9].schema(), other.scacCode);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.carrierType)) {
        this.carrierType = data().deepCopy(fields()[10].schema(), other.carrierType);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.operatingMode)) {
        this.operatingMode = data().deepCopy(fields()[11].schema(), other.operatingMode);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[12].schema(), other.countryCode);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.validFrom)) {
        this.validFrom = data().deepCopy(fields()[13].schema(), other.validFrom);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.validTo)) {
        this.validTo = data().deepCopy(fields()[14].schema(), other.validTo);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.version)) {
        this.version = data().deepCopy(fields()[15].schema(), other.version);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.changeRequestId)) {
        this.changeRequestId = data().deepCopy(fields()[16].schema(), other.changeRequestId);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.recordedBy)) {
        this.recordedBy = data().deepCopy(fields()[17].schema(), other.recordedBy);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
    }

    /**
     * Creates a Builder by copying an existing CarrierEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(gov.dhs.cbp.reference.events.avro.CarrierEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.carrierId)) {
        this.carrierId = data().deepCopy(fields()[3].schema(), other.carrierId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.carrierCode)) {
        this.carrierCode = data().deepCopy(fields()[4].schema(), other.carrierCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.carrierName)) {
        this.carrierName = data().deepCopy(fields()[5].schema(), other.carrierName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.codeSystem)) {
        this.codeSystem = data().deepCopy(fields()[6].schema(), other.codeSystem);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.iataCode)) {
        this.iataCode = data().deepCopy(fields()[7].schema(), other.iataCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.icaoCode)) {
        this.icaoCode = data().deepCopy(fields()[8].schema(), other.icaoCode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.scacCode)) {
        this.scacCode = data().deepCopy(fields()[9].schema(), other.scacCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.carrierType)) {
        this.carrierType = data().deepCopy(fields()[10].schema(), other.carrierType);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.operatingMode)) {
        this.operatingMode = data().deepCopy(fields()[11].schema(), other.operatingMode);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[12].schema(), other.countryCode);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.validFrom)) {
        this.validFrom = data().deepCopy(fields()[13].schema(), other.validFrom);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.validTo)) {
        this.validTo = data().deepCopy(fields()[14].schema(), other.validTo);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.version)) {
        this.version = data().deepCopy(fields()[15].schema(), other.version);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.changeRequestId)) {
        this.changeRequestId = data().deepCopy(fields()[16].schema(), other.changeRequestId);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.recordedBy)) {
        this.recordedBy = data().deepCopy(fields()[17].schema(), other.recordedBy);
        fieldSetFlags()[17] = true;
      }
    }

    /**
      * Gets the value of the 'eventId' field.
      * Unique identifier for this event
      * @return The value.
      */
    public java.lang.String getEventId() {
      return eventId;
    }


    /**
      * Sets the value of the 'eventId' field.
      * Unique identifier for this event
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setEventId(java.lang.String value) {
      validate(fields()[0], value);
      this.eventId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * Unique identifier for this event
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventId' field.
      * Unique identifier for this event
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearEventId() {
      eventId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * Type of event
      * @return The value.
      */
    public gov.dhs.cbp.reference.events.avro.EventType getEventType() {
      return eventType;
    }


    /**
      * Sets the value of the 'eventType' field.
      * Type of event
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setEventType(gov.dhs.cbp.reference.events.avro.EventType value) {
      validate(fields()[1], value);
      this.eventType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * Type of event
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'eventType' field.
      * Type of event
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * When the event occurred
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * When the event occurred
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setTimestamp(long value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * When the event occurred
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * When the event occurred
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'carrierId' field.
      * UUID of the carrier
      * @return The value.
      */
    public java.lang.String getCarrierId() {
      return carrierId;
    }


    /**
      * Sets the value of the 'carrierId' field.
      * UUID of the carrier
      * @param value The value of 'carrierId'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setCarrierId(java.lang.String value) {
      validate(fields()[3], value);
      this.carrierId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'carrierId' field has been set.
      * UUID of the carrier
      * @return True if the 'carrierId' field has been set, false otherwise.
      */
    public boolean hasCarrierId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'carrierId' field.
      * UUID of the carrier
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearCarrierId() {
      carrierId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'carrierCode' field.
      * Carrier code
      * @return The value.
      */
    public java.lang.String getCarrierCode() {
      return carrierCode;
    }


    /**
      * Sets the value of the 'carrierCode' field.
      * Carrier code
      * @param value The value of 'carrierCode'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setCarrierCode(java.lang.String value) {
      validate(fields()[4], value);
      this.carrierCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'carrierCode' field has been set.
      * Carrier code
      * @return True if the 'carrierCode' field has been set, false otherwise.
      */
    public boolean hasCarrierCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'carrierCode' field.
      * Carrier code
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearCarrierCode() {
      carrierCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'carrierName' field.
      * Carrier name
      * @return The value.
      */
    public java.lang.String getCarrierName() {
      return carrierName;
    }


    /**
      * Sets the value of the 'carrierName' field.
      * Carrier name
      * @param value The value of 'carrierName'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setCarrierName(java.lang.String value) {
      validate(fields()[5], value);
      this.carrierName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'carrierName' field has been set.
      * Carrier name
      * @return True if the 'carrierName' field has been set, false otherwise.
      */
    public boolean hasCarrierName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'carrierName' field.
      * Carrier name
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearCarrierName() {
      carrierName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'codeSystem' field.
      * Code system (e.g., IATA, ICAO, SCAC)
      * @return The value.
      */
    public java.lang.String getCodeSystem() {
      return codeSystem;
    }


    /**
      * Sets the value of the 'codeSystem' field.
      * Code system (e.g., IATA, ICAO, SCAC)
      * @param value The value of 'codeSystem'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setCodeSystem(java.lang.String value) {
      validate(fields()[6], value);
      this.codeSystem = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'codeSystem' field has been set.
      * Code system (e.g., IATA, ICAO, SCAC)
      * @return True if the 'codeSystem' field has been set, false otherwise.
      */
    public boolean hasCodeSystem() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'codeSystem' field.
      * Code system (e.g., IATA, ICAO, SCAC)
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearCodeSystem() {
      codeSystem = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'iataCode' field.
      * IATA airline code
      * @return The value.
      */
    public java.lang.String getIataCode() {
      return iataCode;
    }


    /**
      * Sets the value of the 'iataCode' field.
      * IATA airline code
      * @param value The value of 'iataCode'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setIataCode(java.lang.String value) {
      validate(fields()[7], value);
      this.iataCode = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'iataCode' field has been set.
      * IATA airline code
      * @return True if the 'iataCode' field has been set, false otherwise.
      */
    public boolean hasIataCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'iataCode' field.
      * IATA airline code
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearIataCode() {
      iataCode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'icaoCode' field.
      * ICAO airline code
      * @return The value.
      */
    public java.lang.String getIcaoCode() {
      return icaoCode;
    }


    /**
      * Sets the value of the 'icaoCode' field.
      * ICAO airline code
      * @param value The value of 'icaoCode'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setIcaoCode(java.lang.String value) {
      validate(fields()[8], value);
      this.icaoCode = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'icaoCode' field has been set.
      * ICAO airline code
      * @return True if the 'icaoCode' field has been set, false otherwise.
      */
    public boolean hasIcaoCode() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'icaoCode' field.
      * ICAO airline code
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearIcaoCode() {
      icaoCode = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'scacCode' field.
      * SCAC carrier code
      * @return The value.
      */
    public java.lang.String getScacCode() {
      return scacCode;
    }


    /**
      * Sets the value of the 'scacCode' field.
      * SCAC carrier code
      * @param value The value of 'scacCode'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setScacCode(java.lang.String value) {
      validate(fields()[9], value);
      this.scacCode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'scacCode' field has been set.
      * SCAC carrier code
      * @return True if the 'scacCode' field has been set, false otherwise.
      */
    public boolean hasScacCode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'scacCode' field.
      * SCAC carrier code
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearScacCode() {
      scacCode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'carrierType' field.
      * Type of carrier (airline, vessel, truck, rail)
      * @return The value.
      */
    public java.lang.String getCarrierType() {
      return carrierType;
    }


    /**
      * Sets the value of the 'carrierType' field.
      * Type of carrier (airline, vessel, truck, rail)
      * @param value The value of 'carrierType'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setCarrierType(java.lang.String value) {
      validate(fields()[10], value);
      this.carrierType = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'carrierType' field has been set.
      * Type of carrier (airline, vessel, truck, rail)
      * @return True if the 'carrierType' field has been set, false otherwise.
      */
    public boolean hasCarrierType() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'carrierType' field.
      * Type of carrier (airline, vessel, truck, rail)
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearCarrierType() {
      carrierType = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'operatingMode' field.
      * Operating mode (air, sea, land)
      * @return The value.
      */
    public java.lang.String getOperatingMode() {
      return operatingMode;
    }


    /**
      * Sets the value of the 'operatingMode' field.
      * Operating mode (air, sea, land)
      * @param value The value of 'operatingMode'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setOperatingMode(java.lang.String value) {
      validate(fields()[11], value);
      this.operatingMode = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'operatingMode' field has been set.
      * Operating mode (air, sea, land)
      * @return True if the 'operatingMode' field has been set, false otherwise.
      */
    public boolean hasOperatingMode() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'operatingMode' field.
      * Operating mode (air, sea, land)
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearOperatingMode() {
      operatingMode = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryCode' field.
      * Country of registration
      * @return The value.
      */
    public java.lang.String getCountryCode() {
      return countryCode;
    }


    /**
      * Sets the value of the 'countryCode' field.
      * Country of registration
      * @param value The value of 'countryCode'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setCountryCode(java.lang.String value) {
      validate(fields()[12], value);
      this.countryCode = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'countryCode' field has been set.
      * Country of registration
      * @return True if the 'countryCode' field has been set, false otherwise.
      */
    public boolean hasCountryCode() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'countryCode' field.
      * Country of registration
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearCountryCode() {
      countryCode = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'validFrom' field.
      * Start of validity period (ISO date)
      * @return The value.
      */
    public java.lang.String getValidFrom() {
      return validFrom;
    }


    /**
      * Sets the value of the 'validFrom' field.
      * Start of validity period (ISO date)
      * @param value The value of 'validFrom'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setValidFrom(java.lang.String value) {
      validate(fields()[13], value);
      this.validFrom = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'validFrom' field has been set.
      * Start of validity period (ISO date)
      * @return True if the 'validFrom' field has been set, false otherwise.
      */
    public boolean hasValidFrom() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'validFrom' field.
      * Start of validity period (ISO date)
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearValidFrom() {
      validFrom = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'validTo' field.
      * End of validity period (ISO date)
      * @return The value.
      */
    public java.lang.String getValidTo() {
      return validTo;
    }


    /**
      * Sets the value of the 'validTo' field.
      * End of validity period (ISO date)
      * @param value The value of 'validTo'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setValidTo(java.lang.String value) {
      validate(fields()[14], value);
      this.validTo = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'validTo' field has been set.
      * End of validity period (ISO date)
      * @return True if the 'validTo' field has been set, false otherwise.
      */
    public boolean hasValidTo() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'validTo' field.
      * End of validity period (ISO date)
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearValidTo() {
      validTo = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * Version number
      * @return The value.
      */
    public long getVersion() {
      return version;
    }


    /**
      * Sets the value of the 'version' field.
      * Version number
      * @param value The value of 'version'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setVersion(long value) {
      validate(fields()[15], value);
      this.version = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * Version number
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'version' field.
      * Version number
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearVersion() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'changeRequestId' field.
      * Associated change request
      * @return The value.
      */
    public java.lang.String getChangeRequestId() {
      return changeRequestId;
    }


    /**
      * Sets the value of the 'changeRequestId' field.
      * Associated change request
      * @param value The value of 'changeRequestId'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setChangeRequestId(java.lang.String value) {
      validate(fields()[16], value);
      this.changeRequestId = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'changeRequestId' field has been set.
      * Associated change request
      * @return True if the 'changeRequestId' field has been set, false otherwise.
      */
    public boolean hasChangeRequestId() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'changeRequestId' field.
      * Associated change request
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearChangeRequestId() {
      changeRequestId = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordedBy' field.
      * User who recorded this change
      * @return The value.
      */
    public java.lang.String getRecordedBy() {
      return recordedBy;
    }


    /**
      * Sets the value of the 'recordedBy' field.
      * User who recorded this change
      * @param value The value of 'recordedBy'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder setRecordedBy(java.lang.String value) {
      validate(fields()[17], value);
      this.recordedBy = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'recordedBy' field has been set.
      * User who recorded this change
      * @return True if the 'recordedBy' field has been set, false otherwise.
      */
    public boolean hasRecordedBy() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'recordedBy' field.
      * User who recorded this change
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CarrierEvent.Builder clearRecordedBy() {
      recordedBy = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CarrierEvent build() {
      try {
        CarrierEvent record = new CarrierEvent();
        record.eventId = fieldSetFlags()[0] ? this.eventId : (java.lang.String) defaultValue(fields()[0]);
        record.eventType = fieldSetFlags()[1] ? this.eventType : (gov.dhs.cbp.reference.events.avro.EventType) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.carrierId = fieldSetFlags()[3] ? this.carrierId : (java.lang.String) defaultValue(fields()[3]);
        record.carrierCode = fieldSetFlags()[4] ? this.carrierCode : (java.lang.String) defaultValue(fields()[4]);
        record.carrierName = fieldSetFlags()[5] ? this.carrierName : (java.lang.String) defaultValue(fields()[5]);
        record.codeSystem = fieldSetFlags()[6] ? this.codeSystem : (java.lang.String) defaultValue(fields()[6]);
        record.iataCode = fieldSetFlags()[7] ? this.iataCode : (java.lang.String) defaultValue(fields()[7]);
        record.icaoCode = fieldSetFlags()[8] ? this.icaoCode : (java.lang.String) defaultValue(fields()[8]);
        record.scacCode = fieldSetFlags()[9] ? this.scacCode : (java.lang.String) defaultValue(fields()[9]);
        record.carrierType = fieldSetFlags()[10] ? this.carrierType : (java.lang.String) defaultValue(fields()[10]);
        record.operatingMode = fieldSetFlags()[11] ? this.operatingMode : (java.lang.String) defaultValue(fields()[11]);
        record.countryCode = fieldSetFlags()[12] ? this.countryCode : (java.lang.String) defaultValue(fields()[12]);
        record.validFrom = fieldSetFlags()[13] ? this.validFrom : (java.lang.String) defaultValue(fields()[13]);
        record.validTo = fieldSetFlags()[14] ? this.validTo : (java.lang.String) defaultValue(fields()[14]);
        record.version = fieldSetFlags()[15] ? this.version : (java.lang.Long) defaultValue(fields()[15]);
        record.changeRequestId = fieldSetFlags()[16] ? this.changeRequestId : (java.lang.String) defaultValue(fields()[16]);
        record.recordedBy = fieldSetFlags()[17] ? this.recordedBy : (java.lang.String) defaultValue(fields()[17]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CarrierEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<CarrierEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CarrierEvent>
    READER$ = (org.apache.avro.io.DatumReader<CarrierEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.eventId);

    out.writeEnum(this.eventType.ordinal());

    out.writeLong(this.timestamp);

    out.writeString(this.carrierId);

    out.writeString(this.carrierCode);

    out.writeString(this.carrierName);

    out.writeString(this.codeSystem);

    if (this.iataCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.iataCode);
    }

    if (this.icaoCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.icaoCode);
    }

    if (this.scacCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.scacCode);
    }

    if (this.carrierType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.carrierType);
    }

    if (this.operatingMode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.operatingMode);
    }

    if (this.countryCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.countryCode);
    }

    out.writeString(this.validFrom);

    if (this.validTo == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.validTo);
    }

    out.writeLong(this.version);

    if (this.changeRequestId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.changeRequestId);
    }

    out.writeString(this.recordedBy);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.eventId = in.readString();

      this.eventType = gov.dhs.cbp.reference.events.avro.EventType.values()[in.readEnum()];

      this.timestamp = in.readLong();

      this.carrierId = in.readString();

      this.carrierCode = in.readString();

      this.carrierName = in.readString();

      this.codeSystem = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.iataCode = null;
      } else {
        this.iataCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.icaoCode = null;
      } else {
        this.icaoCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.scacCode = null;
      } else {
        this.scacCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.carrierType = null;
      } else {
        this.carrierType = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.operatingMode = null;
      } else {
        this.operatingMode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.countryCode = null;
      } else {
        this.countryCode = in.readString();
      }

      this.validFrom = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.validTo = null;
      } else {
        this.validTo = in.readString();
      }

      this.version = in.readLong();

      if (in.readIndex() != 1) {
        in.readNull();
        this.changeRequestId = null;
      } else {
        this.changeRequestId = in.readString();
      }

      this.recordedBy = in.readString();

    } else {
      for (int i = 0; i < 18; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.eventId = in.readString();
          break;

        case 1:
          this.eventType = gov.dhs.cbp.reference.events.avro.EventType.values()[in.readEnum()];
          break;

        case 2:
          this.timestamp = in.readLong();
          break;

        case 3:
          this.carrierId = in.readString();
          break;

        case 4:
          this.carrierCode = in.readString();
          break;

        case 5:
          this.carrierName = in.readString();
          break;

        case 6:
          this.codeSystem = in.readString();
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.iataCode = null;
          } else {
            this.iataCode = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.icaoCode = null;
          } else {
            this.icaoCode = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.scacCode = null;
          } else {
            this.scacCode = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.carrierType = null;
          } else {
            this.carrierType = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.operatingMode = null;
          } else {
            this.operatingMode = in.readString();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.countryCode = null;
          } else {
            this.countryCode = in.readString();
          }
          break;

        case 13:
          this.validFrom = in.readString();
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.validTo = null;
          } else {
            this.validTo = in.readString();
          }
          break;

        case 15:
          this.version = in.readLong();
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.changeRequestId = null;
          } else {
            this.changeRequestId = in.readString();
          }
          break;

        case 17:
          this.recordedBy = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










