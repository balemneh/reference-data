/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package gov.dhs.cbp.reference.events.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CodeMappingEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2677793985876904947L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CodeMappingEvent\",\"namespace\":\"gov.dhs.cbp.reference.events.avro\",\"fields\":[{\"name\":\"eventId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique identifier for this event\"},{\"name\":\"eventType\",\"type\":{\"type\":\"enum\",\"name\":\"EventType\",\"symbols\":[\"CREATED\",\"UPDATED\",\"DELETED\",\"DEPRECATED\"]},\"doc\":\"Type of event\"},{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"When the event occurred\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"mappingId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"UUID of the code mapping\"},{\"name\":\"sourceSystem\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Source code system\"},{\"name\":\"sourceCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Source code value\"},{\"name\":\"targetSystem\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Target code system\"},{\"name\":\"targetCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Target code value\"},{\"name\":\"mappingType\",\"type\":{\"type\":\"enum\",\"name\":\"MappingType\",\"symbols\":[\"EXACT\",\"PARTIAL\",\"APPROXIMATE\",\"DERIVED\"]},\"doc\":\"Type of mapping relationship\"},{\"name\":\"confidence\",\"type\":[\"null\",\"double\"],\"doc\":\"Confidence score (0.0 to 1.0)\",\"default\":null},{\"name\":\"ruleId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"ID of mapping rule used\",\"default\":null},{\"name\":\"validFrom\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Start of validity period (ISO date)\"},{\"name\":\"validTo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"End of validity period (ISO date)\",\"default\":null},{\"name\":\"version\",\"type\":\"long\",\"doc\":\"Version number\"},{\"name\":\"changeRequestId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Associated change request\",\"default\":null},{\"name\":\"recordedBy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"User who recorded this change\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CodeMappingEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CodeMappingEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CodeMappingEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CodeMappingEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CodeMappingEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CodeMappingEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CodeMappingEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CodeMappingEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CodeMappingEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Unique identifier for this event */
  private java.lang.String eventId;
  /** Type of event */
  private gov.dhs.cbp.reference.events.avro.EventType eventType;
  /** When the event occurred */
  private long timestamp;
  /** UUID of the code mapping */
  private java.lang.String mappingId;
  /** Source code system */
  private java.lang.String sourceSystem;
  /** Source code value */
  private java.lang.String sourceCode;
  /** Target code system */
  private java.lang.String targetSystem;
  /** Target code value */
  private java.lang.String targetCode;
  /** Type of mapping relationship */
  private gov.dhs.cbp.reference.events.avro.MappingType mappingType;
  /** Confidence score (0.0 to 1.0) */
  private java.lang.Double confidence;
  /** ID of mapping rule used */
  private java.lang.String ruleId;
  /** Start of validity period (ISO date) */
  private java.lang.String validFrom;
  /** End of validity period (ISO date) */
  private java.lang.String validTo;
  /** Version number */
  private long version;
  /** Associated change request */
  private java.lang.String changeRequestId;
  /** User who recorded this change */
  private java.lang.String recordedBy;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CodeMappingEvent() {}

  /**
   * All-args constructor.
   * @param eventId Unique identifier for this event
   * @param eventType Type of event
   * @param timestamp When the event occurred
   * @param mappingId UUID of the code mapping
   * @param sourceSystem Source code system
   * @param sourceCode Source code value
   * @param targetSystem Target code system
   * @param targetCode Target code value
   * @param mappingType Type of mapping relationship
   * @param confidence Confidence score (0.0 to 1.0)
   * @param ruleId ID of mapping rule used
   * @param validFrom Start of validity period (ISO date)
   * @param validTo End of validity period (ISO date)
   * @param version Version number
   * @param changeRequestId Associated change request
   * @param recordedBy User who recorded this change
   */
  public CodeMappingEvent(java.lang.String eventId, gov.dhs.cbp.reference.events.avro.EventType eventType, java.lang.Long timestamp, java.lang.String mappingId, java.lang.String sourceSystem, java.lang.String sourceCode, java.lang.String targetSystem, java.lang.String targetCode, gov.dhs.cbp.reference.events.avro.MappingType mappingType, java.lang.Double confidence, java.lang.String ruleId, java.lang.String validFrom, java.lang.String validTo, java.lang.Long version, java.lang.String changeRequestId, java.lang.String recordedBy) {
    this.eventId = eventId;
    this.eventType = eventType;
    this.timestamp = timestamp;
    this.mappingId = mappingId;
    this.sourceSystem = sourceSystem;
    this.sourceCode = sourceCode;
    this.targetSystem = targetSystem;
    this.targetCode = targetCode;
    this.mappingType = mappingType;
    this.confidence = confidence;
    this.ruleId = ruleId;
    this.validFrom = validFrom;
    this.validTo = validTo;
    this.version = version;
    this.changeRequestId = changeRequestId;
    this.recordedBy = recordedBy;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventId;
    case 1: return eventType;
    case 2: return timestamp;
    case 3: return mappingId;
    case 4: return sourceSystem;
    case 5: return sourceCode;
    case 6: return targetSystem;
    case 7: return targetCode;
    case 8: return mappingType;
    case 9: return confidence;
    case 10: return ruleId;
    case 11: return validFrom;
    case 12: return validTo;
    case 13: return version;
    case 14: return changeRequestId;
    case 15: return recordedBy;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventId = value$ != null ? value$.toString() : null; break;
    case 1: eventType = (gov.dhs.cbp.reference.events.avro.EventType)value$; break;
    case 2: timestamp = (java.lang.Long)value$; break;
    case 3: mappingId = value$ != null ? value$.toString() : null; break;
    case 4: sourceSystem = value$ != null ? value$.toString() : null; break;
    case 5: sourceCode = value$ != null ? value$.toString() : null; break;
    case 6: targetSystem = value$ != null ? value$.toString() : null; break;
    case 7: targetCode = value$ != null ? value$.toString() : null; break;
    case 8: mappingType = (gov.dhs.cbp.reference.events.avro.MappingType)value$; break;
    case 9: confidence = (java.lang.Double)value$; break;
    case 10: ruleId = value$ != null ? value$.toString() : null; break;
    case 11: validFrom = value$ != null ? value$.toString() : null; break;
    case 12: validTo = value$ != null ? value$.toString() : null; break;
    case 13: version = (java.lang.Long)value$; break;
    case 14: changeRequestId = value$ != null ? value$.toString() : null; break;
    case 15: recordedBy = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'eventId' field.
   * @return Unique identifier for this event
   */
  public java.lang.String getEventId() {
    return eventId;
  }


  /**
   * Sets the value of the 'eventId' field.
   * Unique identifier for this event
   * @param value the value to set.
   */
  public void setEventId(java.lang.String value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return Type of event
   */
  public gov.dhs.cbp.reference.events.avro.EventType getEventType() {
    return eventType;
  }


  /**
   * Sets the value of the 'eventType' field.
   * Type of event
   * @param value the value to set.
   */
  public void setEventType(gov.dhs.cbp.reference.events.avro.EventType value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return When the event occurred
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * When the event occurred
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'mappingId' field.
   * @return UUID of the code mapping
   */
  public java.lang.String getMappingId() {
    return mappingId;
  }


  /**
   * Sets the value of the 'mappingId' field.
   * UUID of the code mapping
   * @param value the value to set.
   */
  public void setMappingId(java.lang.String value) {
    this.mappingId = value;
  }

  /**
   * Gets the value of the 'sourceSystem' field.
   * @return Source code system
   */
  public java.lang.String getSourceSystem() {
    return sourceSystem;
  }


  /**
   * Sets the value of the 'sourceSystem' field.
   * Source code system
   * @param value the value to set.
   */
  public void setSourceSystem(java.lang.String value) {
    this.sourceSystem = value;
  }

  /**
   * Gets the value of the 'sourceCode' field.
   * @return Source code value
   */
  public java.lang.String getSourceCode() {
    return sourceCode;
  }


  /**
   * Sets the value of the 'sourceCode' field.
   * Source code value
   * @param value the value to set.
   */
  public void setSourceCode(java.lang.String value) {
    this.sourceCode = value;
  }

  /**
   * Gets the value of the 'targetSystem' field.
   * @return Target code system
   */
  public java.lang.String getTargetSystem() {
    return targetSystem;
  }


  /**
   * Sets the value of the 'targetSystem' field.
   * Target code system
   * @param value the value to set.
   */
  public void setTargetSystem(java.lang.String value) {
    this.targetSystem = value;
  }

  /**
   * Gets the value of the 'targetCode' field.
   * @return Target code value
   */
  public java.lang.String getTargetCode() {
    return targetCode;
  }


  /**
   * Sets the value of the 'targetCode' field.
   * Target code value
   * @param value the value to set.
   */
  public void setTargetCode(java.lang.String value) {
    this.targetCode = value;
  }

  /**
   * Gets the value of the 'mappingType' field.
   * @return Type of mapping relationship
   */
  public gov.dhs.cbp.reference.events.avro.MappingType getMappingType() {
    return mappingType;
  }


  /**
   * Sets the value of the 'mappingType' field.
   * Type of mapping relationship
   * @param value the value to set.
   */
  public void setMappingType(gov.dhs.cbp.reference.events.avro.MappingType value) {
    this.mappingType = value;
  }

  /**
   * Gets the value of the 'confidence' field.
   * @return Confidence score (0.0 to 1.0)
   */
  public java.lang.Double getConfidence() {
    return confidence;
  }


  /**
   * Sets the value of the 'confidence' field.
   * Confidence score (0.0 to 1.0)
   * @param value the value to set.
   */
  public void setConfidence(java.lang.Double value) {
    this.confidence = value;
  }

  /**
   * Gets the value of the 'ruleId' field.
   * @return ID of mapping rule used
   */
  public java.lang.String getRuleId() {
    return ruleId;
  }


  /**
   * Sets the value of the 'ruleId' field.
   * ID of mapping rule used
   * @param value the value to set.
   */
  public void setRuleId(java.lang.String value) {
    this.ruleId = value;
  }

  /**
   * Gets the value of the 'validFrom' field.
   * @return Start of validity period (ISO date)
   */
  public java.lang.String getValidFrom() {
    return validFrom;
  }


  /**
   * Sets the value of the 'validFrom' field.
   * Start of validity period (ISO date)
   * @param value the value to set.
   */
  public void setValidFrom(java.lang.String value) {
    this.validFrom = value;
  }

  /**
   * Gets the value of the 'validTo' field.
   * @return End of validity period (ISO date)
   */
  public java.lang.String getValidTo() {
    return validTo;
  }


  /**
   * Sets the value of the 'validTo' field.
   * End of validity period (ISO date)
   * @param value the value to set.
   */
  public void setValidTo(java.lang.String value) {
    this.validTo = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return Version number
   */
  public long getVersion() {
    return version;
  }


  /**
   * Sets the value of the 'version' field.
   * Version number
   * @param value the value to set.
   */
  public void setVersion(long value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'changeRequestId' field.
   * @return Associated change request
   */
  public java.lang.String getChangeRequestId() {
    return changeRequestId;
  }


  /**
   * Sets the value of the 'changeRequestId' field.
   * Associated change request
   * @param value the value to set.
   */
  public void setChangeRequestId(java.lang.String value) {
    this.changeRequestId = value;
  }

  /**
   * Gets the value of the 'recordedBy' field.
   * @return User who recorded this change
   */
  public java.lang.String getRecordedBy() {
    return recordedBy;
  }


  /**
   * Sets the value of the 'recordedBy' field.
   * User who recorded this change
   * @param value the value to set.
   */
  public void setRecordedBy(java.lang.String value) {
    this.recordedBy = value;
  }

  /**
   * Creates a new CodeMappingEvent RecordBuilder.
   * @return A new CodeMappingEvent RecordBuilder
   */
  public static gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder newBuilder() {
    return new gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder();
  }

  /**
   * Creates a new CodeMappingEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CodeMappingEvent RecordBuilder
   */
  public static gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder newBuilder(gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder other) {
    if (other == null) {
      return new gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder();
    } else {
      return new gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder(other);
    }
  }

  /**
   * Creates a new CodeMappingEvent RecordBuilder by copying an existing CodeMappingEvent instance.
   * @param other The existing instance to copy.
   * @return A new CodeMappingEvent RecordBuilder
   */
  public static gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder newBuilder(gov.dhs.cbp.reference.events.avro.CodeMappingEvent other) {
    if (other == null) {
      return new gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder();
    } else {
      return new gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for CodeMappingEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CodeMappingEvent>
    implements org.apache.avro.data.RecordBuilder<CodeMappingEvent> {

    /** Unique identifier for this event */
    private java.lang.String eventId;
    /** Type of event */
    private gov.dhs.cbp.reference.events.avro.EventType eventType;
    /** When the event occurred */
    private long timestamp;
    /** UUID of the code mapping */
    private java.lang.String mappingId;
    /** Source code system */
    private java.lang.String sourceSystem;
    /** Source code value */
    private java.lang.String sourceCode;
    /** Target code system */
    private java.lang.String targetSystem;
    /** Target code value */
    private java.lang.String targetCode;
    /** Type of mapping relationship */
    private gov.dhs.cbp.reference.events.avro.MappingType mappingType;
    /** Confidence score (0.0 to 1.0) */
    private java.lang.Double confidence;
    /** ID of mapping rule used */
    private java.lang.String ruleId;
    /** Start of validity period (ISO date) */
    private java.lang.String validFrom;
    /** End of validity period (ISO date) */
    private java.lang.String validTo;
    /** Version number */
    private long version;
    /** Associated change request */
    private java.lang.String changeRequestId;
    /** User who recorded this change */
    private java.lang.String recordedBy;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.mappingId)) {
        this.mappingId = data().deepCopy(fields()[3].schema(), other.mappingId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.sourceSystem)) {
        this.sourceSystem = data().deepCopy(fields()[4].schema(), other.sourceSystem);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.sourceCode)) {
        this.sourceCode = data().deepCopy(fields()[5].schema(), other.sourceCode);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.targetSystem)) {
        this.targetSystem = data().deepCopy(fields()[6].schema(), other.targetSystem);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.targetCode)) {
        this.targetCode = data().deepCopy(fields()[7].schema(), other.targetCode);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.mappingType)) {
        this.mappingType = data().deepCopy(fields()[8].schema(), other.mappingType);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.confidence)) {
        this.confidence = data().deepCopy(fields()[9].schema(), other.confidence);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.ruleId)) {
        this.ruleId = data().deepCopy(fields()[10].schema(), other.ruleId);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.validFrom)) {
        this.validFrom = data().deepCopy(fields()[11].schema(), other.validFrom);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.validTo)) {
        this.validTo = data().deepCopy(fields()[12].schema(), other.validTo);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.version)) {
        this.version = data().deepCopy(fields()[13].schema(), other.version);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.changeRequestId)) {
        this.changeRequestId = data().deepCopy(fields()[14].schema(), other.changeRequestId);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.recordedBy)) {
        this.recordedBy = data().deepCopy(fields()[15].schema(), other.recordedBy);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
    }

    /**
     * Creates a Builder by copying an existing CodeMappingEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(gov.dhs.cbp.reference.events.avro.CodeMappingEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.mappingId)) {
        this.mappingId = data().deepCopy(fields()[3].schema(), other.mappingId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sourceSystem)) {
        this.sourceSystem = data().deepCopy(fields()[4].schema(), other.sourceSystem);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sourceCode)) {
        this.sourceCode = data().deepCopy(fields()[5].schema(), other.sourceCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.targetSystem)) {
        this.targetSystem = data().deepCopy(fields()[6].schema(), other.targetSystem);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.targetCode)) {
        this.targetCode = data().deepCopy(fields()[7].schema(), other.targetCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.mappingType)) {
        this.mappingType = data().deepCopy(fields()[8].schema(), other.mappingType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.confidence)) {
        this.confidence = data().deepCopy(fields()[9].schema(), other.confidence);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ruleId)) {
        this.ruleId = data().deepCopy(fields()[10].schema(), other.ruleId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.validFrom)) {
        this.validFrom = data().deepCopy(fields()[11].schema(), other.validFrom);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.validTo)) {
        this.validTo = data().deepCopy(fields()[12].schema(), other.validTo);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.version)) {
        this.version = data().deepCopy(fields()[13].schema(), other.version);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.changeRequestId)) {
        this.changeRequestId = data().deepCopy(fields()[14].schema(), other.changeRequestId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.recordedBy)) {
        this.recordedBy = data().deepCopy(fields()[15].schema(), other.recordedBy);
        fieldSetFlags()[15] = true;
      }
    }

    /**
      * Gets the value of the 'eventId' field.
      * Unique identifier for this event
      * @return The value.
      */
    public java.lang.String getEventId() {
      return eventId;
    }


    /**
      * Sets the value of the 'eventId' field.
      * Unique identifier for this event
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setEventId(java.lang.String value) {
      validate(fields()[0], value);
      this.eventId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * Unique identifier for this event
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventId' field.
      * Unique identifier for this event
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearEventId() {
      eventId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * Type of event
      * @return The value.
      */
    public gov.dhs.cbp.reference.events.avro.EventType getEventType() {
      return eventType;
    }


    /**
      * Sets the value of the 'eventType' field.
      * Type of event
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setEventType(gov.dhs.cbp.reference.events.avro.EventType value) {
      validate(fields()[1], value);
      this.eventType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * Type of event
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'eventType' field.
      * Type of event
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * When the event occurred
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * When the event occurred
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setTimestamp(long value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * When the event occurred
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * When the event occurred
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'mappingId' field.
      * UUID of the code mapping
      * @return The value.
      */
    public java.lang.String getMappingId() {
      return mappingId;
    }


    /**
      * Sets the value of the 'mappingId' field.
      * UUID of the code mapping
      * @param value The value of 'mappingId'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setMappingId(java.lang.String value) {
      validate(fields()[3], value);
      this.mappingId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'mappingId' field has been set.
      * UUID of the code mapping
      * @return True if the 'mappingId' field has been set, false otherwise.
      */
    public boolean hasMappingId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'mappingId' field.
      * UUID of the code mapping
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearMappingId() {
      mappingId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceSystem' field.
      * Source code system
      * @return The value.
      */
    public java.lang.String getSourceSystem() {
      return sourceSystem;
    }


    /**
      * Sets the value of the 'sourceSystem' field.
      * Source code system
      * @param value The value of 'sourceSystem'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setSourceSystem(java.lang.String value) {
      validate(fields()[4], value);
      this.sourceSystem = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceSystem' field has been set.
      * Source code system
      * @return True if the 'sourceSystem' field has been set, false otherwise.
      */
    public boolean hasSourceSystem() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'sourceSystem' field.
      * Source code system
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearSourceSystem() {
      sourceSystem = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceCode' field.
      * Source code value
      * @return The value.
      */
    public java.lang.String getSourceCode() {
      return sourceCode;
    }


    /**
      * Sets the value of the 'sourceCode' field.
      * Source code value
      * @param value The value of 'sourceCode'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setSourceCode(java.lang.String value) {
      validate(fields()[5], value);
      this.sourceCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceCode' field has been set.
      * Source code value
      * @return True if the 'sourceCode' field has been set, false otherwise.
      */
    public boolean hasSourceCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'sourceCode' field.
      * Source code value
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearSourceCode() {
      sourceCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'targetSystem' field.
      * Target code system
      * @return The value.
      */
    public java.lang.String getTargetSystem() {
      return targetSystem;
    }


    /**
      * Sets the value of the 'targetSystem' field.
      * Target code system
      * @param value The value of 'targetSystem'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setTargetSystem(java.lang.String value) {
      validate(fields()[6], value);
      this.targetSystem = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'targetSystem' field has been set.
      * Target code system
      * @return True if the 'targetSystem' field has been set, false otherwise.
      */
    public boolean hasTargetSystem() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'targetSystem' field.
      * Target code system
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearTargetSystem() {
      targetSystem = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'targetCode' field.
      * Target code value
      * @return The value.
      */
    public java.lang.String getTargetCode() {
      return targetCode;
    }


    /**
      * Sets the value of the 'targetCode' field.
      * Target code value
      * @param value The value of 'targetCode'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setTargetCode(java.lang.String value) {
      validate(fields()[7], value);
      this.targetCode = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'targetCode' field has been set.
      * Target code value
      * @return True if the 'targetCode' field has been set, false otherwise.
      */
    public boolean hasTargetCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'targetCode' field.
      * Target code value
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearTargetCode() {
      targetCode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'mappingType' field.
      * Type of mapping relationship
      * @return The value.
      */
    public gov.dhs.cbp.reference.events.avro.MappingType getMappingType() {
      return mappingType;
    }


    /**
      * Sets the value of the 'mappingType' field.
      * Type of mapping relationship
      * @param value The value of 'mappingType'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setMappingType(gov.dhs.cbp.reference.events.avro.MappingType value) {
      validate(fields()[8], value);
      this.mappingType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'mappingType' field has been set.
      * Type of mapping relationship
      * @return True if the 'mappingType' field has been set, false otherwise.
      */
    public boolean hasMappingType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'mappingType' field.
      * Type of mapping relationship
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearMappingType() {
      mappingType = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'confidence' field.
      * Confidence score (0.0 to 1.0)
      * @return The value.
      */
    public java.lang.Double getConfidence() {
      return confidence;
    }


    /**
      * Sets the value of the 'confidence' field.
      * Confidence score (0.0 to 1.0)
      * @param value The value of 'confidence'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setConfidence(java.lang.Double value) {
      validate(fields()[9], value);
      this.confidence = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'confidence' field has been set.
      * Confidence score (0.0 to 1.0)
      * @return True if the 'confidence' field has been set, false otherwise.
      */
    public boolean hasConfidence() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'confidence' field.
      * Confidence score (0.0 to 1.0)
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearConfidence() {
      confidence = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'ruleId' field.
      * ID of mapping rule used
      * @return The value.
      */
    public java.lang.String getRuleId() {
      return ruleId;
    }


    /**
      * Sets the value of the 'ruleId' field.
      * ID of mapping rule used
      * @param value The value of 'ruleId'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setRuleId(java.lang.String value) {
      validate(fields()[10], value);
      this.ruleId = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'ruleId' field has been set.
      * ID of mapping rule used
      * @return True if the 'ruleId' field has been set, false otherwise.
      */
    public boolean hasRuleId() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'ruleId' field.
      * ID of mapping rule used
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearRuleId() {
      ruleId = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'validFrom' field.
      * Start of validity period (ISO date)
      * @return The value.
      */
    public java.lang.String getValidFrom() {
      return validFrom;
    }


    /**
      * Sets the value of the 'validFrom' field.
      * Start of validity period (ISO date)
      * @param value The value of 'validFrom'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setValidFrom(java.lang.String value) {
      validate(fields()[11], value);
      this.validFrom = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'validFrom' field has been set.
      * Start of validity period (ISO date)
      * @return True if the 'validFrom' field has been set, false otherwise.
      */
    public boolean hasValidFrom() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'validFrom' field.
      * Start of validity period (ISO date)
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearValidFrom() {
      validFrom = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'validTo' field.
      * End of validity period (ISO date)
      * @return The value.
      */
    public java.lang.String getValidTo() {
      return validTo;
    }


    /**
      * Sets the value of the 'validTo' field.
      * End of validity period (ISO date)
      * @param value The value of 'validTo'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setValidTo(java.lang.String value) {
      validate(fields()[12], value);
      this.validTo = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'validTo' field has been set.
      * End of validity period (ISO date)
      * @return True if the 'validTo' field has been set, false otherwise.
      */
    public boolean hasValidTo() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'validTo' field.
      * End of validity period (ISO date)
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearValidTo() {
      validTo = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * Version number
      * @return The value.
      */
    public long getVersion() {
      return version;
    }


    /**
      * Sets the value of the 'version' field.
      * Version number
      * @param value The value of 'version'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setVersion(long value) {
      validate(fields()[13], value);
      this.version = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * Version number
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'version' field.
      * Version number
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearVersion() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'changeRequestId' field.
      * Associated change request
      * @return The value.
      */
    public java.lang.String getChangeRequestId() {
      return changeRequestId;
    }


    /**
      * Sets the value of the 'changeRequestId' field.
      * Associated change request
      * @param value The value of 'changeRequestId'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setChangeRequestId(java.lang.String value) {
      validate(fields()[14], value);
      this.changeRequestId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'changeRequestId' field has been set.
      * Associated change request
      * @return True if the 'changeRequestId' field has been set, false otherwise.
      */
    public boolean hasChangeRequestId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'changeRequestId' field.
      * Associated change request
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearChangeRequestId() {
      changeRequestId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordedBy' field.
      * User who recorded this change
      * @return The value.
      */
    public java.lang.String getRecordedBy() {
      return recordedBy;
    }


    /**
      * Sets the value of the 'recordedBy' field.
      * User who recorded this change
      * @param value The value of 'recordedBy'.
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder setRecordedBy(java.lang.String value) {
      validate(fields()[15], value);
      this.recordedBy = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'recordedBy' field has been set.
      * User who recorded this change
      * @return True if the 'recordedBy' field has been set, false otherwise.
      */
    public boolean hasRecordedBy() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'recordedBy' field.
      * User who recorded this change
      * @return This builder.
      */
    public gov.dhs.cbp.reference.events.avro.CodeMappingEvent.Builder clearRecordedBy() {
      recordedBy = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CodeMappingEvent build() {
      try {
        CodeMappingEvent record = new CodeMappingEvent();
        record.eventId = fieldSetFlags()[0] ? this.eventId : (java.lang.String) defaultValue(fields()[0]);
        record.eventType = fieldSetFlags()[1] ? this.eventType : (gov.dhs.cbp.reference.events.avro.EventType) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.mappingId = fieldSetFlags()[3] ? this.mappingId : (java.lang.String) defaultValue(fields()[3]);
        record.sourceSystem = fieldSetFlags()[4] ? this.sourceSystem : (java.lang.String) defaultValue(fields()[4]);
        record.sourceCode = fieldSetFlags()[5] ? this.sourceCode : (java.lang.String) defaultValue(fields()[5]);
        record.targetSystem = fieldSetFlags()[6] ? this.targetSystem : (java.lang.String) defaultValue(fields()[6]);
        record.targetCode = fieldSetFlags()[7] ? this.targetCode : (java.lang.String) defaultValue(fields()[7]);
        record.mappingType = fieldSetFlags()[8] ? this.mappingType : (gov.dhs.cbp.reference.events.avro.MappingType) defaultValue(fields()[8]);
        record.confidence = fieldSetFlags()[9] ? this.confidence : (java.lang.Double) defaultValue(fields()[9]);
        record.ruleId = fieldSetFlags()[10] ? this.ruleId : (java.lang.String) defaultValue(fields()[10]);
        record.validFrom = fieldSetFlags()[11] ? this.validFrom : (java.lang.String) defaultValue(fields()[11]);
        record.validTo = fieldSetFlags()[12] ? this.validTo : (java.lang.String) defaultValue(fields()[12]);
        record.version = fieldSetFlags()[13] ? this.version : (java.lang.Long) defaultValue(fields()[13]);
        record.changeRequestId = fieldSetFlags()[14] ? this.changeRequestId : (java.lang.String) defaultValue(fields()[14]);
        record.recordedBy = fieldSetFlags()[15] ? this.recordedBy : (java.lang.String) defaultValue(fields()[15]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CodeMappingEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<CodeMappingEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CodeMappingEvent>
    READER$ = (org.apache.avro.io.DatumReader<CodeMappingEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.eventId);

    out.writeEnum(this.eventType.ordinal());

    out.writeLong(this.timestamp);

    out.writeString(this.mappingId);

    out.writeString(this.sourceSystem);

    out.writeString(this.sourceCode);

    out.writeString(this.targetSystem);

    out.writeString(this.targetCode);

    out.writeEnum(this.mappingType.ordinal());

    if (this.confidence == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.confidence);
    }

    if (this.ruleId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ruleId);
    }

    out.writeString(this.validFrom);

    if (this.validTo == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.validTo);
    }

    out.writeLong(this.version);

    if (this.changeRequestId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.changeRequestId);
    }

    out.writeString(this.recordedBy);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.eventId = in.readString();

      this.eventType = gov.dhs.cbp.reference.events.avro.EventType.values()[in.readEnum()];

      this.timestamp = in.readLong();

      this.mappingId = in.readString();

      this.sourceSystem = in.readString();

      this.sourceCode = in.readString();

      this.targetSystem = in.readString();

      this.targetCode = in.readString();

      this.mappingType = gov.dhs.cbp.reference.events.avro.MappingType.values()[in.readEnum()];

      if (in.readIndex() != 1) {
        in.readNull();
        this.confidence = null;
      } else {
        this.confidence = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ruleId = null;
      } else {
        this.ruleId = in.readString();
      }

      this.validFrom = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.validTo = null;
      } else {
        this.validTo = in.readString();
      }

      this.version = in.readLong();

      if (in.readIndex() != 1) {
        in.readNull();
        this.changeRequestId = null;
      } else {
        this.changeRequestId = in.readString();
      }

      this.recordedBy = in.readString();

    } else {
      for (int i = 0; i < 16; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.eventId = in.readString();
          break;

        case 1:
          this.eventType = gov.dhs.cbp.reference.events.avro.EventType.values()[in.readEnum()];
          break;

        case 2:
          this.timestamp = in.readLong();
          break;

        case 3:
          this.mappingId = in.readString();
          break;

        case 4:
          this.sourceSystem = in.readString();
          break;

        case 5:
          this.sourceCode = in.readString();
          break;

        case 6:
          this.targetSystem = in.readString();
          break;

        case 7:
          this.targetCode = in.readString();
          break;

        case 8:
          this.mappingType = gov.dhs.cbp.reference.events.avro.MappingType.values()[in.readEnum()];
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.confidence = null;
          } else {
            this.confidence = in.readDouble();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ruleId = null;
          } else {
            this.ruleId = in.readString();
          }
          break;

        case 11:
          this.validFrom = in.readString();
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.validTo = null;
          } else {
            this.validTo = in.readString();
          }
          break;

        case 13:
          this.version = in.readLong();
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.changeRequestId = null;
          } else {
            this.changeRequestId = in.readString();
          }
          break;

        case 15:
          this.recordedBy = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










